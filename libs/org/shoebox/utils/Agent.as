package org.shoebox.utils {	import org.shoebox.utils.logger.Logger;	import flash.sampler.DeleteObjectSample;	import flash.sampler.NewObjectSample;	import flash.sampler.Sample;	import flash.sampler.getSamples;	import flash.sampler.startSampling;	import flash.sampler.stopSampling;	import flash.utils.describeType;	/**	 *	* org.shoebox.utils.Agent	* @date:18 sept. 09	* @author shoe[box]	*/	public class Agent{				// -------o constructor			/**			* contructor			* @return void			*/			public function Agent():void{							}					// -------o public						/**			* start function			* @public			* @param 			* @return void			*/			public function start():void{				startSampling();			}						/**			* cancel function			* @public			* @param 			* @return void		 	*/			public function cancel() : void {				var oSAMPLE : Sample;				var oNEWSAMPLE : NewObjectSample;				var oDELSAMPLE : DeleteObjectSample;								for each (oSAMPLE in getSamples()) {					trace('---------------------------------------------------------------------------\n');									                    						if(oSAMPLE is NewObjectSample) { 						oNEWSAMPLE = oSAMPLE as NewObjectSample;						trace('NewObjectSample :::\n\t' + oNEWSAMPLE.time + ' /// ' + describeType(oNEWSAMPLE.type).@name);					}else 	if(oSAMPLE is DeleteObjectSample) { 						oDELSAMPLE = oSAMPLE as DeleteObjectSample;						trace('DelObjectSample :::\n\t' + oDELSAMPLE.time + ' /// ' + oDELSAMPLE.size);					} else {						if(oSAMPLE.stack !== null)				             trace('Sample ::: ' + oSAMPLE.time + '\n\t\t' + oSAMPLE.stack.join('\n\t\t') + '\n');				                   else				                     trace('Sample ::: ' + oSAMPLE.time);					}			}			stopSampling();			}		// -------o private		// -------o misc			public static function trc(arguments:*) : void {				Logger.log(Agent,arguments);			}	}}