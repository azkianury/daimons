package org.shoebox.patterns.mvc.abstracts {	import org.shoebox.errors.Errors;	import org.shoebox.patterns.frontcontroller.FrontController;	import org.shoebox.patterns.mvc.events.UpdateEvent;	import org.shoebox.patterns.mvc.interfaces.IView;	import org.shoebox.utils.AbstractValidation;	import flash.events.Event;	import flash.events.EventDispatcher;	/**	 * ABSTRACT MODEL (MVC PACKAGE)	* Responsabilities:	* 	*	===> The model store the datas	* 		* 	===> The model store the view instance	* 		* 	===> The model update the view	* 		* org.shoebox.patterns.mvc2.controller.AModel	* @date:26 janv. 09	* @author shoe[box]	*/	public class AModel extends EventDispatcher{				public var app					: AApplication;		public var frontController			: FrontController;		public var controller				: AController;		public var view					: AView;				protected var _oAPPLICATION			: AApplication;				// -------o constructor						/**			* 			* @param			* @return			*/			public function AModel():void{				AbstractValidation.validate(AModel,this);			}					// -------o public						/*			* Do nothing method, call to intialize the controller			* (After than the view have been added to the stage)			* 			* @return void/			*/			public function initialize( e : Event = null ):void{				throw new Error(Errors.DONOTHING);			}						/**			* 			* @param			* @return			*/			public function cancel(e:Event = null):void{				throw new Error(Errors.DONOTHING);			}						 						/**			* Call the UpdateView pattern to send the update to the view			* @param	sTYPE:Event type (STRING)			* @param 	oDATAS:Datas object to be passed to the view (DATAS)			* @return	void			*/			public function update(sTYPE:String = null , oDATAS:Object = null):void{								if(sTYPE == null)					throw new Error('To update the view you must identifie the update session by a valid ID');									( view as IView ).update(new UpdateEvent(sTYPE,oDATAS));				}						/**			* runApp function			* @public			* @param 			* @return			*/			public function startUp() : void {						}					// -------o private					// -------o misc			public static function trc(arguments:*) : void {				//Logger.log(AModel,arguments);			}							}}