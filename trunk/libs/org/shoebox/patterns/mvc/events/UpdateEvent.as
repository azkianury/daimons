package org.shoebox.patterns.mvc.events {	import org.shoebox.utils.logger.Logger;		import flash.events.Event;		/**	*	* org.shoebox.patterns.mvc2.events.UpdateEvent	* @date:26 janv. 09	* @author shoe[box]	*/	public class UpdateEvent extends Event{				protected var _oDATAS		:Object;		protected var _sTYPE		:String;				// -------o constructor						/**			* 			* @param			* @return			*/			public function UpdateEvent(sTYPE:String = null , oDATAS:Object = null):void{				super(sTYPE);								if(sTYPE==null)					throw new ArgumentError('UpdateEvent type cannot be null');							_oDATAS = oDATAS;				_sTYPE = sTYPE;			}		// -------o public						/**			* 			* @param			* @return			*/			override public function toString():String{				return '[UpdateEvent] type ::: '+type+' | DATAS :::' + _oDATAS;			}			/**			* 			* @param			* @return			*/			override public function get type():String{				return _sTYPE;			}						/**			* 			* @param			* @return			*/			public function get datas():Object{				return _oDATAS;			}							// -------o private		// -------o misc			public static function trc(arguments:*) : void {				Logger.log(UpdateEvent,arguments);			}	}}