package org.shoebox.display.filters {	import org.shoebox.display.BoxFilters;	import org.shoebox.utils.logger.Logger;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.BlendMode;	import flash.filters.BlurFilter;	import flash.geom.Point;	import flash.geom.Rectangle;	/**	 *	* org.shoebox.display.filters.LineFilter	* @date:14 sept. 09	* @author shoe[box]	*/	public class LineFilter extends Bitmap{				protected var _uCOL		:uint = 0xFF000000;		protected var _uTHR		:uint = 0xFFAAAAAA;		protected var _oPOINT		:Point = new Point(0,0);		protected var _oRECT		:Rectangle;					// -------o constructor			/**			* contructor			* @return void			*/			public function LineFilter():void{							}					// -------o public						/**			* 			* @param			* @return			*/			override final public function set bitmapData(value : BitmapData) : void{				_oRECT = value.rect;				super.bitmapData =_draw(value);			}					// -------o private						/**			* 			* @param			* @return			*/			final protected function _draw(oSOURCE:BitmapData):BitmapData{									var 	oIMAGEX:BitmapData = new BitmapData(oSOURCE.width,oSOURCE.height,true);						oIMAGEX.draw(oSOURCE);						oIMAGEX.applyFilter(oIMAGEX,_oRECT,new Point(0,0), new BlurFilter(3,3,1));															var 	oIMAGEY:BitmapData = oIMAGEX.clone();										//Sobel						oIMAGEX.applyFilter(oIMAGEX,_oRECT,_oPOINT, BoxFilters.SobelX);						oIMAGEY.applyFilter(oIMAGEY,_oRECT,_oPOINT, BoxFilters.SobelY);									//						oIMAGEX.threshold(oIMAGEX, _oRECT, _oPOINT, "<", _uTHR, 0 , 0xFF , true);						oIMAGEY.threshold(oIMAGEY, _oRECT, _oPOINT, "<", _uTHR, 0 , 0xFF , true);						oIMAGEX.draw(oIMAGEY, null, null, BlendMode.ADD);						oIMAGEX.threshold(oIMAGEX,_oRECT,_oPOINT, 									">",_uTHR, 									_uCOL, 0xFFFFFFFF,	true								);															var 	oRES:BitmapData = new BitmapData(oIMAGEX.width,oIMAGEX.height,true,0xFFFFFF);						oRES.threshold(oIMAGEX,_oRECT,_oPOINT, 									"!=",_uCOL, 									0xFF, 0xFF,	true);								return oRES;			}					// -------o misc			public static function trc(arguments:*) : void {				Logger.log(LineFilter,arguments);			}	}}